basePath: /api/v1
definitions:
  user.AuthResponseJson:
    properties:
      token:
        type: string
      username:
        type: string
    type: object
host: localhost:9090
info:
  contact: {}
  description: This is the backend API for the forum.
  license:
    name: All Rights Reserved.
  title: CVWO Forum Backend API
  version: "1.0"
paths:
  /comment/{id}:
    delete:
      description: Deletes a comment
      parameters:
      - description: Comment UUID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
        "401":
          description: Invalid JWT token
        "403":
          description: User is not the creator of the comment
        "500":
          description: Internal Server Error
      summary: Handles comment deletion requests
      tags:
      - comment
    put:
      description: Updates a comment
      parameters:
      - description: Comment UUID
        in: path
        name: id
        required: true
        type: string
      - description: Comment body
        in: formData
        name: body
        required: true
        type: string
      responses:
        "200":
          description: OK
        "401":
          description: Invalid JWT token
        "403":
          description: User is not the creator of the comment
        "500":
          description: Internal Server Error
      summary: Handles comment update requests
      tags:
      - comment
  /comment/create:
    post:
      consumes:
      - application/json
      description: Creates a new comment for the given thread
      parameters:
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      - description: Thread UUID
        in: formData
        name: thread
        required: true
        type: string
      - description: Comment body
        in: formData
        name: body
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: JSON of Created comment
        "401":
          description: Invalid JWT token
        "500":
          description: Internal Server Error
      summary: Handles comment creation requests
      tags:
      - comment
  /thread/{thread_id}/comments:
    get:
      description: Retrieves comments for the given thread
      parameters:
      - description: Thread UUID
        in: path
        name: thread_id
        required: true
        type: string
      - description: Sorting order
        enum:
        - created_time_asc
        - created_time_desc
        in: query
        name: order
        type: string
      - description: Page number
        in: query
        name: page
        type: string
      responses:
        "200":
          description: JSON array of comments
        "500":
          description: Internal Server Error
      summary: Handles comment retrieval requests
      tags:
      - comment
  /user/create:
    post:
      consumes:
      - application/json
      description: Registers a new user with the given username and password
      parameters:
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.AuthResponseJson'
        "400":
          description: Username already exists
        "500":
          description: Internal Server Error
      summary: Handles registration requests
      tags:
      - user
  /user/login:
    post:
      consumes:
      - application/json
      description: Logs in a user with the given username and password
      parameters:
      - description: Username
        in: formData
        name: username
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.AuthResponseJson'
        "400":
          description: Username does not exist
        "401":
          description: Incorrect password
        "500":
          description: Internal Server Error
      summary: Handles login requests
      tags:
      - user
securityDefinitions:
  Bearer:
    description: The word "Bearer", followed by a space, and then the JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
